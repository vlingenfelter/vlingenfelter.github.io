{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["styled","div","_templateObject","props","theme","gridColumns","__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","className","allMarkdownRemark","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","frontmatter","cover","childImageSharp","blurb","tags","tag","query","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Nav","react_default","style","background","margin","textAlign","maxWidth","padding","gatsby_browser_entry","Header","siteTitle","marginBottom","color","textDecoration","nav","defaultProps","Footer","href","Layout","Fragment","header","site","siteMetadata","paddingTop","footer","_755544856","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-projects-js-36bb8204794321059cd0.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.theme.gridColumns}, 1fr);\n  grid-gap: 50px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n\n  .gatsby-image-outer-wrapper,\n  .gatsby-image-wrapper {\n    position: static !important;\n  }\n`\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n    <SEO title=\"Projects\" keywords={['gatsby', 'application', 'react', 'projects']}/>\n\n\n      <div className=\"post-feed\">\n\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n\n          <div key={node.id}>\n          <Link to={node.fields.slug}>\n          <Img className=\"post-card\" fluid={node.frontmatter.cover.childImageSharp.fluid} />\n\n              <h2 >\n                {node.frontmatter.title}\n              </h2>\n\n\n              <p> {node.frontmatter.blurb} </p>\n\n\n              <p>{node.frontmatter.tags.map((tag) => (\n                <span className =\"tag\" key={tag}> {tag} </span>\n              ))}</p>\n              </Link>\n          </div>\n\n        ))}\n\n\n      </div>\n\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n  allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }\n  filter: {fileAbsolutePath: {regex: \"/(projects)/.*.md$/\"}}) {\n    totalCount\n    edges {\n      node {\n        children {\n          id\n        }\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          tags\n          blurb\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 760, quality: 90) {\n                base64\n                tracedSVG\n                aspectRatio\n                src\n                srcSet\n                srcWebp\n                srcSetWebp\n                sizes\n                originalImg\n                originalName\n                presentationWidth\n                presentationHeight\n              }\n            }\n          }\n        }\n        fields {\n          slug\n        }\n        excerpt(pruneLength: 500)\n        html\n      }\n    }\n  }\n\n}\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport React from 'react'\n\nconst Nav = () => (\n  <div\n    style={{\n      background: 'honeydew',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        textAlign: 'center',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n    <div className=\"horizontal\"></div>\n          <Link\n            to=\"/projects/\"\n            className = \"nav-link\"\n          >\n            Projects\n          </Link>\n          <Link\n            to=\"/blog/\"\n            className = \"nav-link\"\n          >\n            Blog\n          </Link>\n          \n          <Link\n            to=\"/about/\"\n            className = \"nav-link\"\n          >\n            Info\n          </Link>\n\n          <div className=\"horizontal\"></div>\n    </div>\n  </div>\n)\n\n\n\nexport default Nav\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport Nav from './nav'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'honeydew',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        textAlign: 'center',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'black',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n\n      <Nav />\n\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => (\n  <div\n    style={{\n      background: 'honeydew',\n      padding: '3rem'\n    }}\n  >\n  <div\n    style={{\n      textAlign: 'center'\n    }}>\n  <p>Made with <span style={{color:\"lightSalmon\"}}>❤</span> in Hollister, CA\n  <br />\n  Powered by <a href=\"https://github.com/gatsbyjs/gatsby\">Gatsby</a> in Boston, MA</p>\n  </div>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  StaticQuery,\n  graphql\n} from 'gatsby'\n\nimport Header from './header'\nimport Footer from \"./footer\"\nimport './layout.css'\n\nconst Layout = ({\n  children\n}) => ( <\n  StaticQuery query = {\n    graphql `\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  }\n  render = {\n    data => ( <\n      >\n      <\n      Header siteTitle = {\n        data.site.siteMetadata.title\n      }\n      />\n\n      <\n      div style = {\n        {\n          margin: '0 auto',\n          maxWidth: 960,\n          padding: '0px 1.0875rem 1.45rem',\n          paddingTop: 0,\n        }\n      } > {\n        children\n      }\n\n      <\n      /div> <\n      Footer / >\n      <\n      />\n\n    )\n  }\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}